<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1321</width>
    <height>900</height>
   </rect>
  </property>
  <property name="minimumSize">
   <size>
    <width>1321</width>
    <height>900</height>
   </size>
  </property>
  <property name="maximumSize">
   <size>
    <width>1321</width>
    <height>900</height>
   </size>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow {
background-color: #404040;
 border-color: #BEBEBE;
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="OpenGLWidget" name="widget" native="true">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>1321</width>
      <height>900</height>
     </rect>
    </property>
    <property name="minimumSize">
     <size>
      <width>1321</width>
      <height>900</height>
     </size>
    </property>
    <property name="maximumSize">
     <size>
      <width>1321</width>
      <height>900</height>
     </size>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color:  #F4F4EF;
</string>
    </property>
    <widget class="QFrame" name="frame_4">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>770</y>
       <width>511</width>
       <height>111</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QFrame {
background-color: rgb(10, 65, 50);
 border-color: #BEBEBE;
}
</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QPushButton" name="pushButtonRotateX">
      <property name="geometry">
       <rect>
        <x>130</x>
        <y>60</y>
        <width>61</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>X</string>
      </property>
     </widget>
     <widget class="QLabel" name="labelSettingsAfinRotate">
      <property name="geometry">
       <rect>
        <x>130</x>
        <y>30</y>
        <width>190</width>
        <height>30</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: #BEBEBE;
background-color: rgb(3, 36, 14);
 border-radius:6px;
</string>
      </property>
      <property name="text">
       <string>Rotate</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButtonRotateZ">
      <property name="geometry">
       <rect>
        <x>260</x>
        <y>60</y>
        <width>61</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>Z</string>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="doubleSpinBoxRotate">
      <property name="geometry">
       <rect>
        <x>130</x>
        <y>90</y>
        <width>191</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDoubleSpinBox {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
image: url(:/icon/Icons/left_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
image: url(:/icon/Icons/right_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
      <property name="minimum">
       <double>-360.000000000000000</double>
      </property>
      <property name="maximum">
       <double>360.000000000000000</double>
      </property>
      <property name="singleStep">
       <double>1.000000000000000</double>
      </property>
      <property name="value">
       <double>5.000000000000000</double>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButtonRotateY">
      <property name="geometry">
       <rect>
        <x>190</x>
        <y>60</y>
        <width>71</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>Y</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButtonMovingX">
      <property name="geometry">
       <rect>
        <x>320</x>
        <y>60</y>
        <width>61</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>X</string>
      </property>
     </widget>
     <widget class="QLabel" name="labelSettingsAfinMove">
      <property name="geometry">
       <rect>
        <x>320</x>
        <y>30</y>
        <width>190</width>
        <height>30</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: #BEBEBE;
background-color: rgb(3, 36, 14);
 border-radius:6px;
</string>
      </property>
      <property name="text">
       <string>Move</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButtonMovingZ">
      <property name="geometry">
       <rect>
        <x>450</x>
        <y>60</y>
        <width>61</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>Z</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButtonMovingY">
      <property name="geometry">
       <rect>
        <x>380</x>
        <y>60</y>
        <width>71</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>Y</string>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="doubleSpinBoxMoving">
      <property name="geometry">
       <rect>
        <x>320</x>
        <y>90</y>
        <width>191</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDoubleSpinBox {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
image: url(:/icon/Icons/left_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
image: url(:/icon/Icons/right_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
      <property name="minimum">
       <double>-100.000000000000000</double>
      </property>
      <property name="maximum">
       <double>100.000000000000000</double>
      </property>
      <property name="singleStep">
       <double>0.100000000000000</double>
      </property>
      <property name="value">
       <double>0.250000000000000</double>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButtonMinusScale">
      <property name="geometry">
       <rect>
        <x>70</x>
        <y>60</y>
        <width>31</width>
        <height>51</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>-</string>
      </property>
     </widget>
     <widget class="QLabel" name="labelSettingsAfinScale">
      <property name="geometry">
       <rect>
        <x>70</x>
        <y>30</y>
        <width>61</width>
        <height>30</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: #BEBEBE;
background-color: rgb(3, 36, 14);
 border-radius:6px;
</string>
      </property>
      <property name="text">
       <string>Scale</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButtonPlusScale">
      <property name="geometry">
       <rect>
        <x>100</x>
        <y>60</y>
        <width>31</width>
        <height>51</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>+</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButtonImage">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>80</y>
        <width>70</width>
        <height>30</height>
       </rect>
      </property>
      <property name="minimumSize">
       <size>
        <width>70</width>
        <height>30</height>
       </size>
      </property>
      <property name="maximumSize">
       <size>
        <width>100</width>
        <height>32</height>
       </size>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>Image</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pushButtonGif">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>50</y>
        <width>70</width>
        <height>30</height>
       </rect>
      </property>
      <property name="minimumSize">
       <size>
        <width>70</width>
        <height>30</height>
       </size>
      </property>
      <property name="maximumSize">
       <size>
        <width>100</width>
        <height>32</height>
       </size>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {

background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>Gif</string>
      </property>
     </widget>
     <widget class="QPushButton" name="chooseColorModel">
      <property name="geometry">
       <rect>
        <x>370</x>
        <y>0</y>
        <width>101</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:7px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>Model color</string>
      </property>
     </widget>
     <widget class="QLabel" name="labelChoosedColorModel">
      <property name="geometry">
       <rect>
        <x>470</x>
        <y>0</y>
        <width>41</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
color: rgb(255, 255, 255);
border-color: #BEBEBE;
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
    </widget>
    <widget class="QPushButton" name="openFile">
     <property name="geometry">
      <rect>
       <x>1140</x>
       <y>0</y>
       <width>181</width>
       <height>32</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(3, 36, 14);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}
</string>
     </property>
     <property name="text">
      <string>Open File</string>
     </property>
    </widget>
    <widget class="QFrame" name="frame">
     <property name="geometry">
      <rect>
       <x>510</x>
       <y>770</y>
       <width>811</width>
       <height>111</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QFrame {
background-color: rgb(10, 65, 50);
 border-color: #BEBEBE;
}

</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QPushButton" name="chooseColorBG">
      <property name="geometry">
       <rect>
        <x>480</x>
        <y>20</y>
        <width>101</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:7px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>BG Color</string>
      </property>
     </widget>
     <widget class="QComboBox" name="comboBoxTypeLines">
      <property name="geometry">
       <rect>
        <x>159</x>
        <y>50</y>
        <width>111</width>
        <height>22</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>13</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down  {
  height: 16px;
 width: 16px;
 subcontrol-position: center right;
image: url(:/icon/Icons/arrow_to_down.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QComboBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}</string>
      </property>
      <property name="sizeAdjustPolicy">
       <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
      </property>
      <item>
       <property name="text">
        <string>No</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Straight</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Dash</string>
       </property>
      </item>
     </widget>
     <widget class="QComboBox" name="comboBoxTypeVertex">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>50</y>
        <width>91</width>
        <height>21</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>13</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down  {
  height: 16px;
 width: 16px;
 subcontrol-position: center right;
image: url(:/icon/Icons/arrow_to_down.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QComboBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}</string>
      </property>
      <property name="sizeAdjustPolicy">
       <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
      </property>
      <item>
       <property name="text">
        <string>No</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Round</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Square</string>
       </property>
      </item>
     </widget>
     <widget class="QLabel" name="labelSettingsTexture">
      <property name="geometry">
       <rect>
        <x>479</x>
        <y>50</y>
        <width>141</width>
        <height>30</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: #BEBEBE;
background-color: rgb(3, 36, 14);
 border-radius:6px;
</string>
      </property>
      <property name="text">
       <string>Texture</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="doubleSpinBoxSizeLines">
      <property name="geometry">
       <rect>
        <x>160</x>
        <y>90</y>
        <width>110</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDoubleSpinBox {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
image: url(:/icon/Icons/left_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
image: url(:/icon/Icons/right_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
      <property name="minimum">
       <double>1.000000000000000</double>
      </property>
      <property name="maximum">
       <double>20.000000000000000</double>
      </property>
      <property name="singleStep">
       <double>1.000000000000000</double>
      </property>
     </widget>
     <widget class="QLabel" name="labelChoosedColorLines">
      <property name="geometry">
       <rect>
        <x>250</x>
        <y>70</y>
        <width>21</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
color: rgb(255, 255, 255);
border-color: #BEBEBE;
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QLabel" name="labelChoosedColorVertex">
      <property name="geometry">
       <rect>
        <x>340</x>
        <y>70</y>
        <width>20</width>
        <height>20</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
color: rgb(255, 255, 255);

border-color: #BEBEBE;
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="chooseColorLight">
      <property name="geometry">
       <rect>
        <x>360</x>
        <y>70</y>
        <width>90</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:7px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>light color</string>
      </property>
     </widget>
     <widget class="QLabel" name="labelSettingsVertex">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>20</y>
        <width>91</width>
        <height>30</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: #BEBEBE;
background-color: rgb(3, 36, 14);
 border-radius:6px;
</string>
      </property>
      <property name="text">
       <string>Dots</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="doubleSpinBoxSizeVertex">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>90</y>
        <width>91</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDoubleSpinBox {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
image: url(:/icon/Icons/left_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
image: url(:/icon/Icons/right_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
      <property name="minimum">
       <double>1.000000000000000</double>
      </property>
      <property name="maximum">
       <double>20.000000000000000</double>
      </property>
      <property name="singleStep">
       <double>1.000000000000000</double>
      </property>
      <property name="value">
       <double>1.000000000000000</double>
      </property>
     </widget>
     <widget class="QLabel" name="labelProection">
      <property name="geometry">
       <rect>
        <x>620</x>
        <y>10</y>
        <width>71</width>
        <height>41</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(255, 255, 255);
background-color:rgba(0,0,0,0);
</string>
      </property>
      <property name="text">
       <string>Projection</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="doubleSpinBoxPowerLight">
      <property name="geometry">
       <rect>
        <x>360</x>
        <y>90</y>
        <width>120</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDoubleSpinBox {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
image: url(:/icon/Icons/left_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
image: url(:/icon/Icons/right_arrow.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>100.000000000000000</double>
      </property>
      <property name="singleStep">
       <double>1.000000000000000</double>
      </property>
      <property name="value">
       <double>15.000000000000000</double>
      </property>
     </widget>
     <widget class="QLabel" name="labelSettingsLight">
      <property name="geometry">
       <rect>
        <x>360</x>
        <y>20</y>
        <width>121</width>
        <height>30</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: #BEBEBE;
background-color: rgb(3, 36, 14);
 border-radius:6px;
</string>
      </property>
      <property name="text">
       <string>Light</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QComboBox" name="comboBoxTypeProection">
      <property name="geometry">
       <rect>
        <x>690</x>
        <y>20</y>
        <width>121</width>
        <height>22</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>13</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down  {
  height: 16px;
 width: 16px;
 subcontrol-position: center right;
image: url(:/icon/Icons/arrow_to_down.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QComboBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}</string>
      </property>
      <property name="sizeAdjustPolicy">
       <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
      </property>
      <item>
       <property name="text">
        <string>Parallel</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Central</string>
       </property>
      </item>
     </widget>
     <widget class="QLabel" name="labelModel">
      <property name="geometry">
       <rect>
        <x>610</x>
        <y>50</y>
        <width>70</width>
        <height>20</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(255, 255, 255);
background-color:rgba(0,0,0,0);
</string>
      </property>
      <property name="text">
       <string>Model</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
     </widget>
     <widget class="QPushButton" name="chooseColorLines">
      <property name="geometry">
       <rect>
        <x>159</x>
        <y>70</y>
        <width>91</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:7px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>line color</string>
      </property>
     </widget>
     <widget class="QLabel" name="labelSettingsLines">
      <property name="geometry">
       <rect>
        <x>159</x>
        <y>20</y>
        <width>111</width>
        <height>30</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">color: #BEBEBE;
background-color: rgb(3, 36, 14);
 border-radius:6px;


</string>
      </property>
      <property name="text">
       <string>Line</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
     <widget class="QPushButton" name="chooseTextureOff">
      <property name="geometry">
       <rect>
        <x>550</x>
        <y>80</y>
        <width>71</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:7px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>drop</string>
      </property>
     </widget>
     <widget class="QLabel" name="labelChoosedColorLight">
      <property name="geometry">
       <rect>
        <x>450</x>
        <y>70</y>
        <width>21</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
color: rgb(255, 255, 255);

border-color: #BEBEBE;
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QComboBox" name="comboBoxTypeModel">
      <property name="geometry">
       <rect>
        <x>690</x>
        <y>50</y>
        <width>121</width>
        <height>22</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>13</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down  {
  height: 16px;
 width: 16px;
 subcontrol-position: center right;
image: url(:/icon/Icons/arrow_to_down.png);
border-color: #BEBEBE;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down:pressed {
color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QComboBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}</string>
      </property>
      <property name="sizeAdjustPolicy">
       <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
      </property>
      <item>
       <property name="text">
        <string>Sceleton</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Flat Shading</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>Soft shading</string>
       </property>
      </item>
     </widget>
     <widget class="QPushButton" name="chooseTexture">
      <property name="geometry">
       <rect>
        <x>479</x>
        <y>80</y>
        <width>71</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:7px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>open</string>
      </property>
     </widget>
     <widget class="QLabel" name="labelChoosedColorBG">
      <property name="geometry">
       <rect>
        <x>590</x>
        <y>20</y>
        <width>21</width>
        <height>21</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
color: rgb(255, 255, 255);
border-color: #BEBEBE;
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="chooseColorVertex">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>70</y>
        <width>71</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:7px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>dots color</string>
      </property>
     </widget>
     <widget class="QPushButton" name="resetSettings">
      <property name="geometry">
       <rect>
        <x>620</x>
        <y>80</y>
        <width>190</width>
        <height>30</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
color: rgb(255, 255, 255);
background-color: rgb(20, 65, 50);
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
QPushButton:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
border-style: solid;
border-width:1px;
border-radius:10px;
}
QPushButton:pressed {
    color: rgb(144, 143, 146);
background-color: rgb(16, 94, 46);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}</string>
      </property>
      <property name="text">
       <string>RESET</string>
      </property>
     </widget>
     <widget class="QFrame" name="frame_3">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>0</y>
        <width>161</width>
        <height>111</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame {
color: rgb(255, 255, 255);
background-color: rgb(3, 36, 14);
 border-color: #BEBEBE;
 border-style: solid;
 border-width:2px;
 border-radius:10px;
}
</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QLabel" name="labelFilename">
       <property name="geometry">
        <rect>
         <x>69</x>
         <y>7</y>
         <width>91</width>
         <height>26</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel {
color: rgb(255, 255, 255);
background-color: #828282;
 border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}
</string>
       </property>
       <property name="text">
        <string/>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="labelEdgesCount">
       <property name="geometry">
        <rect>
         <x>69</x>
         <y>44</y>
         <width>89</width>
         <height>25</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel {
color: rgb(255, 255, 255);
background-color: #828282;
 border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}</string>
       </property>
       <property name="text">
        <string/>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="labelVertexCount">
       <property name="geometry">
        <rect>
         <x>70</x>
         <y>80</y>
         <width>89</width>
         <height>26</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel {
color: rgb(255, 255, 255);
background-color: #828282;
 border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:10px;
}</string>
       </property>
       <property name="text">
        <string/>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
      <widget class="QLabel" name="labelNameFile">
       <property name="geometry">
        <rect>
         <x>30</x>
         <y>7</y>
         <width>31</width>
         <height>23</height>
        </rect>
       </property>
       <property name="minimumSize">
        <size>
         <width>0</width>
         <height>23</height>
        </size>
       </property>
       <property name="maximumSize">
        <size>
         <width>99</width>
         <height>23</height>
        </size>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel {
color: rgb(255, 255, 255);
background-color: rgb(3, 36, 14);
 border-color: #BEBEBE;
 border-width:0px;
 border-radius:0px;
}</string>
       </property>
       <property name="text">
        <string>File:</string>
       </property>
      </widget>
      <widget class="QLabel" name="labelEdges">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>37</y>
         <width>51</width>
         <height>31</height>
        </rect>
       </property>
       <property name="minimumSize">
        <size>
         <width>0</width>
         <height>0</height>
        </size>
       </property>
       <property name="maximumSize">
        <size>
         <width>999</width>
         <height>999</height>
        </size>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel {
color: rgb(255, 255, 255);
background-color: rgb(3, 36, 14);
 border-color: #BEBEBE;
 border-width:0px;
 border-radius:0px;
}</string>
       </property>
       <property name="text">
        <string>Edges:</string>
       </property>
      </widget>
      <widget class="QLabel" name="labelVertex">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>77</y>
         <width>51</width>
         <height>23</height>
        </rect>
       </property>
       <property name="minimumSize">
        <size>
         <width>0</width>
         <height>23</height>
        </size>
       </property>
       <property name="maximumSize">
        <size>
         <width>99</width>
         <height>23</height>
        </size>
       </property>
       <property name="styleSheet">
        <string notr="true">QLabel {
color: rgb(255, 255, 255);
background-color: rgb(3, 36, 14);
 border-color: #BEBEBE;
 border-width:0px;
 border-radius:0px;
}</string>
       </property>
       <property name="text">
        <string>Vertex</string>
       </property>
      </widget>
     </widget>
    </widget>
    <widget class="QLabel" name="labelProection_2">
     <property name="geometry">
      <rect>
       <x>450</x>
       <y>670</y>
       <width>71</width>
       <height>41</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <pointsize>11</pointsize>
      </font>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(255, 255, 255);
background-color:rgba(0,0,0,0);
</string>
     </property>
     <property name="text">
      <string>Projection</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
     </property>
    </widget>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1321</width>
     <height>22</height>
    </rect>
   </property>
   <widget class="QMenu" name="menu3DVIEWER2_0">
    <property name="title">
     <string>3DVIEWER2.0</string>
    </property>
   </widget>
   <addaction name="menu3DVIEWER2_0"/>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>OpenGLWidget</class>
   <extends>QWidget</extends>
   <header location="global">Headers/openglwidget.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
